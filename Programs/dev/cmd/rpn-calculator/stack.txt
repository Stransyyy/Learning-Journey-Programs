package main

type stack []int // this is the stack type

func (st *stack) Push(a int) {
	*st = append(*st, a)
}

// pop removes and returns the top element of the stack except when the stack is empty, in which case it returns 0
func (st *stack) Pop() (int, bool) {

	if st.IsEmpty() {
		return 0, false
	}

	// get  final element
	a := (*st)[len(*st)-1]

	// remove final element
	*st = (*st)[:len(*st)-1]

	return a, true
}

//checks for the last input in the stack
func (st *stack) Peek(int, bool) {
	if st.IsEmpty() { //using the IsEmpty function to check if the stack is empty
	}

	return
}
//Checks if the stack is empty
func (st *stack) IsEmpty() bool {
	return len(*st) == 0
}

//Clears the whole stack no matter the number of inputs
func (st *stack) Clear() {
	*st = stack{}
}

//Tells you the number of inputs in the stack
func (st *stack) Count() int {
	return len(*st)
}